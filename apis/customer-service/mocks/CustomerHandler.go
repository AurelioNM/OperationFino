// Code generated by mockery v2.40.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// CustomerHandler is an autogenerated mock type for the CustomerHandler type
type CustomerHandler struct {
	mock.Mock
}

// CreateCustomer provides a mock function with given fields: w, r
func (_m *CustomerHandler) CreateCustomer(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// DeleteCustomer provides a mock function with given fields: w, r
func (_m *CustomerHandler) DeleteCustomer(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// GetCustomerByID provides a mock function with given fields: w, r
func (_m *CustomerHandler) GetCustomerByID(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// GetCustomers provides a mock function with given fields: w, r
func (_m *CustomerHandler) GetCustomers(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// UpdateCustomer provides a mock function with given fields: w, r
func (_m *CustomerHandler) UpdateCustomer(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// NewCustomerHandler creates a new instance of CustomerHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCustomerHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *CustomerHandler {
	mock := &CustomerHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
